library(dplyr)
library(data.table)
library(tidyverse)
library(ggplot2)
library(readxl)
set1 <- read_excel('1993f.xls')
set2 <- read_excel('2003f.xls')
set3 <-read_excel('2013f.xls')
set4 <- read_excel('2023f.xls')
names(set1) <- set1[1,] # the data loaded with "header" included as data, so fixing that
set1 <- set1[-1,]
names(set2) <- set2[1,]
set2 <- set2[-1,]
names(set3) <- set3[1,]
set3 <- set3[-1,]
names(set4) <- set4[1,]
set4 <- set4[-1,]
names(set1)[names(set1) == "Average Fare ($)"] <- "Avg_1993"
colnames(set1)[7]<- "Adjusted_Avg_Fare_Q2_1993"
colnames(set1)[2]<- "Airport"
colnames(set1)[1]<- "PassRank_1993"
colnames(set1)[8]<- "_1993v2022_Passengers"
names(set2)[names(set2) == "Average Fare ($)"] <- "Avg_2003"
colnames(set2)[7]<- "Adjusted_Avg_Fare_Q2_2003"
colnames(set2)[2]<- "Airport"
colnames(set2)[1]<- "Pass_Rank_2003"
colnames(set2)[8]<- "_2003v2022_Passengers"
names(set3)[names(set3) == "Average Fare ($)"] <- "Avg_2013"
colnames(set3)[7]<- "Adjusted_Avg_Fare_Q2_2013"
colnames(set3)[2]<- "Airport"
colnames(set3)[1]<- "Pass_Rank_2013"
colnames(set3)[8]<- "_2013v2022_Passengers"
names(set4)[names(set4) == "Average Fare ($)"] <- "Avg_2023"
colnames(set4)[7]<- "Adjusted_Avg_Fare_Q2_2023"
colnames(set4)[2]<- "Airport"
colnames(set4)[1]<- "Pass_Rank_2023"
colnames(set4)[8]<- "_2023v2022_Passengers"
nrow(set1)
summary(set1)
nrow(set2)
summary(set2)
nrow(set3)
summary(set2)
nrow(set4)
summary(set2)
# Filter out records with missing or 0 values in '_1993v2022_Passengers'
set1 <- set1[complete.cases(set1$`_1993v2022_Passengers`) & set1$`_1993v2022_Passengers` != 0, ]
# Filter out records with missing or 0 values in '_2003v2022_Passengers'
set2 <- set2[complete.cases(set2$`_2003v2022_Passengers`) & set2$`_2003v2022_Passengers` != 0, ]
# Filter out records with missing or 0 values in '_2013v2022_Passengers'
set3 <- set3[complete.cases(set3$`_2013v2022_Passengers`) & set3$`_2013v2022_Passengers` != 0, ]
# Filter out records with missing or 0 values in '_2023v2022_Passengers'
set4 <- set4[complete.cases(set4$`_2023v2022_Passengers`) & set4$`_2023v2022_Passengers` != 0, ]
trx1 <- merge(set1, set2, by=c('Airport', 'Airport Name', 'City Name', 'State Name'))
dim(trx1)
trx2 <- merge(set3, set4, by=c('Airport', 'Airport Name', 'City Name', 'State Name'))
dim(trx2)
trx <- merge(trx1, trx2, by=c('Airport', 'Airport Name', 'City Name', 'State Name'))
trx$PassRank_1993 = as.numeric(as.character(trx$PassRank_1993))
trx$Adjusted_Avg_Fare_Q2_1993 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_1993))
trx$Pass_Rank_2003 = as.numeric(as.character(trx$Pass_Rank_2003))
trx$Adjusted_Avg_Fare_Q2_2003 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_2003))
trx$Pass_Rank_2013 = as.numeric(as.character(trx$Pass_Rank_2013))
trx$Adjusted_Avg_Fare_Q2_2013 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_2013))
trx$Pass_Rank_2023 = as.numeric(as.character(trx$Pass_Rank_2023))
trx$Adjusted_Avg_Fare_Q2_2023 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_2023))
trx$Avg_1993 = as.numeric(as.character(trx$Avg_1993))
trx$Avg_2003 = as.numeric(as.character(trx$Avg_2003))
trx$Avg_2013 = as.numeric(as.character(trx$Avg_2013))
trx$Avg_2023 = as.numeric(as.character(trx$Avg_2023))
library(purrr)
trx<-modify_if(trx, ~is.numeric(.), ~round(., 3))
trx <- na.omit(trx)
airports <- read_csv('us-airports.csv')
gps <- airports %>%
select(local_code, latitude_deg, longitude_deg)
names(gps) <- gps[1,]
gps <- gps[-1,]
colnames(gps)[1]<- "Airport"
colnames(gps)[2]<- "lat"
colnames(gps)[3]<- "lon"
trx <- merge(trx, gps, by=c('Airport'))
trx <- trx %>% drop_na(`Airport Name`) #drop rows missing aiport name (from og trx)'
trx$lat = as.numeric(as.character(trx$lat))
trx$lon = as.numeric(as.character(trx$lon))
check_indx <- trx %>%
select(Avg_1993, Avg_2003, Avg_2013, Avg_2023) %>%
mutate(check.adj.93 = (Avg_1993) *2.13,
check.adj.03 = (Avg_2003) * 1.67,
check.adj.13 = (Avg_2013) * 1.32,
check.adj.23 = (Avg_2023)* 1)
trx_indx <- merge(trx, check_indx, by=c('Avg_1993', 'Avg_2003', 'Avg_2013', 'Avg_2023'))
trx_indx %>%
select(Adjusted_Avg_Fare_Q2_1993,check.adj.93, Adjusted_Avg_Fare_Q2_2003, check.adj.03, Adjusted_Avg_Fare_Q2_2013, check.adj.13, Adjusted_Avg_Fare_Q2_2023, check.adj.23)%>%
slice(1:5)
trx %>%
group_by(`State Name`) %>%
summarise(
Avg_1993 = mean(Avg_1993, na.rm = TRUE),
Avg_2003 = mean(Avg_2003, na.rm = TRUE),
Avg_2013 = mean(Avg_2013, na.rm = TRUE),
Avg_2023 = mean(Avg_2023, na.rm = TRUE))
m1 <- trx %>%
group_by(`State Name`) %>%
summarise(
Avg_1993 = mean(Avg_1993, na.rm = TRUE),
Avg_2003 = mean(Avg_2003, na.rm = TRUE),
Avg_2013 = mean(Avg_2013, na.rm = TRUE),
Avg_2023 = mean(Avg_2023, na.rm = TRUE)
)
m1 %>%
arrange(desc(Avg_1993)) %>%
select(`State Name`, Avg_1993) %>%
slice(1)
m2 <- trx %>%
group_by(`State Name`) %>%
summarise(
Avg_1993 = mean(Avg_1993, na.rm = TRUE),
Avg_2003 = mean(Avg_2003, na.rm = TRUE),
Avg_2013 = mean(Avg_2013, na.rm = TRUE),
Avg_2023 = mean(Avg_2023, na.rm = TRUE)
)
m2 %>% arrange(desc(Avg_2003)) %>%
select(`State Name`, Avg_2003) %>%
slice(1)
m3 <- trx %>%
group_by(`State Name`) %>%
summarise(
Avg_1993 = mean(Avg_1993, na.rm = TRUE),
Avg_2003 = mean(Avg_2003, na.rm = TRUE),
Avg_2013 = mean(Avg_2013, na.rm = TRUE),
Avg_2023 = mean(Avg_2023, na.rm = TRUE)
)
m3 %>%
arrange(desc(Avg_2013)) %>%
select(`State Name`, Avg_2013) %>%
slice(1)
m4 <-trx %>%
group_by(`State Name`) %>%
summarise(
Avg_1993 = mean(Avg_1993, na.rm = TRUE),
Avg_2003 = mean(Avg_2003, na.rm = TRUE),
Avg_2013 = mean(Avg_2013, na.rm = TRUE),
Avg_2023 = mean(Avg_2023, na.rm = TRUE)
)
m4 %>% arrange(desc(Avg_2023)) %>%
select(`State Name`, Avg_2023) %>%
slice(1)
trx %>%
filter(Airport== "LAX"| Airport== "BOS") %>%
select(Airport, Pass_Rank_2023, Pass_Rank_2013, Pass_Rank_2003, PassRank_1993)
names(trx)[names(trx) == "State Name"] <- "State"
west <- trx %>%
filter(State=="CA"|State=="AK"|State=="WA"|State=="ID"|State=="OR"|State=="NV"|State=="UT")
west %>%
ggplot()+
geom_point(mapping = aes(x = Pass_Rank_2003 , y = Adjusted_Avg_Fare_Q2_2003, color = "2003")) +
geom_smooth(mapping = aes(x = Pass_Rank_2003 , y = Adjusted_Avg_Fare_Q2_2003, color = "2003"), method = "lm")+
geom_point(mapping = aes(x = Pass_Rank_2013 , y = Adjusted_Avg_Fare_Q2_2013, color = "2013" )) +
geom_smooth(mapping = aes(x = Pass_Rank_2013 , y = Adjusted_Avg_Fare_Q2_2013, color = "2013"), method = "lm")+
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Figure 1:Trend of Inflation Adjusted Fare vs Passenger Rank of Western US Airports in 2003")+
geom_point(mapping = aes(x = PassRank_1993 , y = Adjusted_Avg_Fare_Q2_1993, color = "1993")) +
geom_smooth(mapping = aes(x = PassRank_1993 , y = Adjusted_Avg_Fare_Q2_1993, color = "1993"), method = "lm")+
geom_point(mapping = aes(x = Pass_Rank_2023 , y = Adjusted_Avg_Fare_Q2_2023, color = "2023")) +
geom_smooth(mapping = aes(x = Pass_Rank_2023 , y = Adjusted_Avg_Fare_Q2_2023, color = "2023"), method = "lm")+
xlab(label = "Passenger Rank") +
ylab(label = "Inflation Adjusted Average Fare")+
scale_color_manual(name="legend",values = c("blue","yellow","pink","red"))
east <- trx %>%
filter(State=="NY"|State=="PA"|State=="MD"|State=="DE"|State=="NJ"|State=="CT"|State=="RI"|State=="VT"|State=="MA"|State=="NH"|State=="ME")
east %>%
ggplot()+
geom_point(mapping = aes(x = Pass_Rank_2003 , y = Adjusted_Avg_Fare_Q2_2003, color = "2003")) +
geom_smooth(mapping = aes(x = Pass_Rank_2003 , y = Adjusted_Avg_Fare_Q2_2003, color = "2003"), method = "lm")+
geom_point(mapping = aes(x = Pass_Rank_2013 , y = Adjusted_Avg_Fare_Q2_2013, color = "2013" )) +
geom_smooth(mapping = aes(x = Pass_Rank_2013 , y = Adjusted_Avg_Fare_Q2_2013, color = "2013"), method = "lm")+
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Figure 2:Trend of Inflation Adjusted Fare vs Passenger Rank of Eastern US Airports in 2003")+
geom_point(mapping = aes(x = PassRank_1993 , y = Adjusted_Avg_Fare_Q2_1993, color = "1993")) +
geom_smooth(mapping = aes(x = PassRank_1993 , y = Adjusted_Avg_Fare_Q2_1993, color = "1993"), method = "lm")+
geom_point(mapping = aes(x = Pass_Rank_2023 , y = Adjusted_Avg_Fare_Q2_2023, color = "2023")) +
geom_smooth(mapping = aes(x = Pass_Rank_2023 , y = Adjusted_Avg_Fare_Q2_2023, color = "2023"), method = "lm")+
xlab(label = "Passenger Rank") +
ylab(label = "Inflation Adjusted Average Fare")+
scale_color_manual(name="legend",values = c("blue","yellow","pink","red"))
LAX.BOS <- trx %>%
filter(Airport %in% c("LAX", "BOS")) %>%
select(Airport, Adjusted_Avg_Fare_Q2_1993, Adjusted_Avg_Fare_Q2_2003, Adjusted_Avg_Fare_Q2_2013, Adjusted_Avg_Fare_Q2_2023, Avg_1993, Avg_2003, Avg_2013, Avg_2023, Pass_Rank_2023, Pass_Rank_2013, Pass_Rank_2003, PassRank_1993)
LAX.BOS %>%
gather(key = "Year", value = "Unadjusted_Avg_Fare", Avg_1993, Avg_2003, Avg_2013, Avg_2023) %>%
ggplot(aes(x = Airport, y = Unadjusted_Avg_Fare, fill = Year)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Figure 3: Unadjusted Fare For BOS and LAX by Year")+
xlab("Airport") +
ylab("Unadjusted Average Fare") +
facet_grid(. ~ Year, scales = "free_y", space = "free_y") +
scale_fill_manual(
values = c("Avg_1993" = "blue", "Avg_2003" = "yellow", "Avg_2013" = "pink", "Avg_2023" = "red"),
labels = c("Avg_1993" = "Average Fare 1993", "Avg_2003" = "Average Fare 2003", "Avg_2013" = "Average Fare 2013", "Avg_2023" = "Average Fare 2023")
) +
theme_minimal()
LAX.BOS <- LAX.BOS %>%
mutate(
comp_fare = Adjusted_Avg_Fare_Q2_1993 - Adjusted_Avg_Fare_Q2_2023)
LAX.BOS %>%
select(Airport, comp_fare)
278.577	+ 369.449
