---
Title: 'Cost Map'
execute: 
  echo: false
author: Adaeze Obinelo
format: html
editor: visual
code-fold: true
---

#                                               Cost Map

## Question:

Now that we know LAX isn't, what *is* the most expensive place to fly out of in Q2 of 2023? What is the Least?

## The Map:

```{r, include=FALSE}
library(dplyr)
library(data.table)
library(tidyverse)
library(ggplot2)
library(readxl)
library(leaflet)
library(devtools)
library(leaflet)
library(magrittr)

set1 <- read_excel('1993f.xls')
set2 <- read_excel('2003f.xls')
set3 <-read_excel('2013f.xls')
set4 <- read_excel('2023f.xls')

names(set1) <- set1[1,] # the data loaded with "header" included as data, so fixing that
set1 <- set1[-1,]

names(set2) <- set2[1,] 
set2 <- set2[-1,]

names(set3) <- set3[1,] 
set3 <- set3[-1,]

names(set4) <- set4[1,] 
set4 <- set4[-1,]

names(set1)[names(set1) == "Average Fare ($)"] <- "Avg_1993"
colnames(set1)[7]<- "Adjusted_Avg_Fare_Q2_1993"
colnames(set1)[2]<- "Airport"
colnames(set1)[1]<- "PassRank_1993"
colnames(set1)[8]<- "_1993v2022_Passengers"

names(set2)[names(set2) == "Average Fare ($)"] <- "Avg_2003"
colnames(set2)[7]<- "Adjusted_Avg_Fare_Q2_2003"
colnames(set2)[2]<- "Airport"
colnames(set2)[1]<- "Pass_Rank_2003"
colnames(set2)[8]<- "_2003v2022_Passengers"

names(set3)[names(set3) == "Average Fare ($)"] <- "Avg_2013"
colnames(set3)[7]<- "Adjusted_Avg_Fare_Q2_2013"
colnames(set3)[2]<- "Airport"
colnames(set3)[1]<- "Pass_Rank_2013"
colnames(set3)[8]<- "_2013v2022_Passengers"

names(set4)[names(set4) == "Average Fare ($)"] <- "Avg_2023"
colnames(set4)[7]<- "Adjusted_Avg_Fare_Q2_2023"
colnames(set4)[2]<- "Airport"
colnames(set4)[1]<- "Pass_Rank_2023"
colnames(set4)[8]<- "_2023v2022_Passengers"
trx1 <- merge(set1, set2, by=c('Airport', 'Airport Name', 'City Name', 'State Name'))
dim(trx1)

trx2 <- merge(set3, set4, by=c('Airport', 'Airport Name', 'City Name', 'State Name'))
dim(trx2)

trx <- merge(trx1, trx2, by=c('Airport', 'Airport Name', 'City Name', 'State Name'))

trx$PassRank_1993 = as.numeric(as.character(trx$PassRank_1993))
trx$Adjusted_Avg_Fare_Q2_1993 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_1993))
trx$Pass_Rank_2003 = as.numeric(as.character(trx$Pass_Rank_2003))
trx$Adjusted_Avg_Fare_Q2_2003 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_2003))

trx$Pass_Rank_2013 = as.numeric(as.character(trx$Pass_Rank_2013))
trx$Adjusted_Avg_Fare_Q2_2013 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_2013))
trx$Pass_Rank_2023 = as.numeric(as.character(trx$Pass_Rank_2023))
trx$Adjusted_Avg_Fare_Q2_2023 = as.numeric(as.character(trx$Adjusted_Avg_Fare_Q2_2023))

trx$Avg_1993 = as.numeric(as.character(trx$Avg_1993))
trx$Avg_2003 = as.numeric(as.character(trx$Avg_2003))
trx$Avg_2013 = as.numeric(as.character(trx$Avg_2013))
trx$Avg_2023 = as.numeric(as.character(trx$Avg_2023))

library(purrr)
trx<-modify_if(trx, ~is.numeric(.), ~round(., 3))


trx <- na.omit(trx)

airports <- read_csv('us-airports.csv')

gps <- airports %>% 
  select(local_code, latitude_deg, longitude_deg)

names(gps) <- gps[1,] 
gps <- gps[-1,]
colnames(gps)[1]<- "Airport"
colnames(gps)[2]<- "lat"
colnames(gps)[3]<- "lon"


trx <- merge(trx, gps, by=c('Airport'))

trx <- trx %>% drop_na(`Airport Name`) #drop rows missing aiport name (from og trx)'

trx$lat = as.numeric(as.character(trx$lat))
trx$lon = as.numeric(as.character(trx$lon))

```

```{r, include=FALSE}
# any R code here
check <- trx %>% 
  select(Avg_1993, Avg_2003, Avg_2013, Avg_2023) %>% 
  mutate(check.adj.93 = (Avg_1993) *2.13,
                  check.adj.03 = (Avg_2003) * 1.67,
                  check.adj.13 = (Avg_2013) * 1.32,
            check.adj.23 = (Avg_2023)* 1)

trx <- merge(trx, check, by=c('Avg_1993', 'Avg_2003', 'Avg_2013', 'Avg_2023'))


trx %>% 
  select(Adjusted_Avg_Fare_Q2_1993,check.adj.93, Adjusted_Avg_Fare_Q2_2003, check.adj.03, Adjusted_Avg_Fare_Q2_2013, check.adj.13, Adjusted_Avg_Fare_Q2_2023, check.adj.23)%>% 
  slice(1:5)
   


trx<-trx %>% 
  arrange(desc(Avg_2023))

max <- trx %>%
  select(Avg_2023, lat, lon, Airport, `Airport Name`) %>%
  filter(row_number() == 1)

min <- trx %>%
  select(Avg_2023, lat, lon, Airport, `Airport Name`) %>%
  filter(row_number() == 369)
```

## Answer:

**The most expensive Airport to Fly out of in 2023 is Cold Bay Airport in Alaska.**

**The least expensive to fly out of is Santa Maria Public Airport in Santa Barbara.**

```{r}

leaflet() %>%
 addTiles() %>%
 addCircleMarkers(
   data= max,
   lng = ~lon, lat = ~lat, popup = "Min Avg Fare.",
    opacity = 1, fillOpacity = 1, radius = 4, color = "red") %>% 
  addCircleMarkers(
   data= min,
   lng = ~lon, lat = ~lat, popup = "Max Avg Fare.",
    opacity=1, fillOpacity=1, radius = 4, color = "blue")

```

```{r}

max

min
```

```{r, include=FALSE}
library(tidyverse)
library(dplyr, warn.conflicts = FALSE)
library(tidygeocoder)
library(leaflet)


map_max <- max %>% 
  geocode(`Airport Name`, method = 'osm', lat = latitude, lon = longitude, full_results = TRUE)

map_min <- min %>% 
  geocode(`Airport Name`, method = 'osm', lat = latitude, lon = longitude, full_results = TRUE)

a <- leaflet(map_max) %>%
 addTiles() %>%
 addCircleMarkers(lng = map_max$longitude, lat = map_max$latitude, clusterOptions = markerClusterOptions())

b <- leaflet(map_min) %>%
 addTiles() %>%
 addCircleMarkers(lng = map_min$lon, lat = map_min$lat, clusterOptions = markerClusterOptions())

```

## Least Expensive: Santa Maria Airport

```{r}
b
```

Address:3217 Terminal Dr, Santa Maria, CA 93455

[Learn more here](http://www.santamariaairport.com/)

## Most Expensive: CDB

```{r}

a 
```

Address: 1 Flying Tiger Way, Cold Bay, AK 99571

[Learn more here](https://nfdc.faa.gov/nfdcApps/services/ajv5/airportDisplay.jsp?airportId=cdb)

## 
